// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package statuspage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetComponentsComponent struct {
	AutomationEmail string `pulumi:"automationEmail"`
	Description     string `pulumi:"description"`
	GroupId         string `pulumi:"groupId"`
	// The ID of this resource.
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	Position int    `pulumi:"position"`
}

// GetComponentsComponentInput is an input type that accepts GetComponentsComponentArgs and GetComponentsComponentOutput values.
// You can construct a concrete instance of `GetComponentsComponentInput` via:
//
//          GetComponentsComponentArgs{...}
type GetComponentsComponentInput interface {
	pulumi.Input

	ToGetComponentsComponentOutput() GetComponentsComponentOutput
	ToGetComponentsComponentOutputWithContext(context.Context) GetComponentsComponentOutput
}

type GetComponentsComponentArgs struct {
	AutomationEmail pulumi.StringInput `pulumi:"automationEmail"`
	Description     pulumi.StringInput `pulumi:"description"`
	GroupId         pulumi.StringInput `pulumi:"groupId"`
	// The ID of this resource.
	Id       pulumi.StringInput `pulumi:"id"`
	Name     pulumi.StringInput `pulumi:"name"`
	Position pulumi.IntInput    `pulumi:"position"`
}

func (GetComponentsComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsComponent)(nil)).Elem()
}

func (i GetComponentsComponentArgs) ToGetComponentsComponentOutput() GetComponentsComponentOutput {
	return i.ToGetComponentsComponentOutputWithContext(context.Background())
}

func (i GetComponentsComponentArgs) ToGetComponentsComponentOutputWithContext(ctx context.Context) GetComponentsComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsComponentOutput)
}

// GetComponentsComponentArrayInput is an input type that accepts GetComponentsComponentArray and GetComponentsComponentArrayOutput values.
// You can construct a concrete instance of `GetComponentsComponentArrayInput` via:
//
//          GetComponentsComponentArray{ GetComponentsComponentArgs{...} }
type GetComponentsComponentArrayInput interface {
	pulumi.Input

	ToGetComponentsComponentArrayOutput() GetComponentsComponentArrayOutput
	ToGetComponentsComponentArrayOutputWithContext(context.Context) GetComponentsComponentArrayOutput
}

type GetComponentsComponentArray []GetComponentsComponentInput

func (GetComponentsComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsComponent)(nil)).Elem()
}

func (i GetComponentsComponentArray) ToGetComponentsComponentArrayOutput() GetComponentsComponentArrayOutput {
	return i.ToGetComponentsComponentArrayOutputWithContext(context.Background())
}

func (i GetComponentsComponentArray) ToGetComponentsComponentArrayOutputWithContext(ctx context.Context) GetComponentsComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsComponentArrayOutput)
}

type GetComponentsComponentOutput struct{ *pulumi.OutputState }

func (GetComponentsComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsComponent)(nil)).Elem()
}

func (o GetComponentsComponentOutput) ToGetComponentsComponentOutput() GetComponentsComponentOutput {
	return o
}

func (o GetComponentsComponentOutput) ToGetComponentsComponentOutputWithContext(ctx context.Context) GetComponentsComponentOutput {
	return o
}

func (o GetComponentsComponentOutput) AutomationEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.AutomationEmail }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetComponentsComponentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v GetComponentsComponent) int { return v.Position }).(pulumi.IntOutput)
}

type GetComponentsComponentArrayOutput struct{ *pulumi.OutputState }

func (GetComponentsComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsComponent)(nil)).Elem()
}

func (o GetComponentsComponentArrayOutput) ToGetComponentsComponentArrayOutput() GetComponentsComponentArrayOutput {
	return o
}

func (o GetComponentsComponentArrayOutput) ToGetComponentsComponentArrayOutputWithContext(ctx context.Context) GetComponentsComponentArrayOutput {
	return o
}

func (o GetComponentsComponentArrayOutput) Index(i pulumi.IntInput) GetComponentsComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentsComponent {
		return vs[0].([]GetComponentsComponent)[vs[1].(int)]
	}).(GetComponentsComponentOutput)
}

type GetComponentsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetComponentsFilterInput is an input type that accepts GetComponentsFilterArgs and GetComponentsFilterOutput values.
// You can construct a concrete instance of `GetComponentsFilterInput` via:
//
//          GetComponentsFilterArgs{...}
type GetComponentsFilterInput interface {
	pulumi.Input

	ToGetComponentsFilterOutput() GetComponentsFilterOutput
	ToGetComponentsFilterOutputWithContext(context.Context) GetComponentsFilterOutput
}

type GetComponentsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetComponentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsFilter)(nil)).Elem()
}

func (i GetComponentsFilterArgs) ToGetComponentsFilterOutput() GetComponentsFilterOutput {
	return i.ToGetComponentsFilterOutputWithContext(context.Background())
}

func (i GetComponentsFilterArgs) ToGetComponentsFilterOutputWithContext(ctx context.Context) GetComponentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsFilterOutput)
}

// GetComponentsFilterArrayInput is an input type that accepts GetComponentsFilterArray and GetComponentsFilterArrayOutput values.
// You can construct a concrete instance of `GetComponentsFilterArrayInput` via:
//
//          GetComponentsFilterArray{ GetComponentsFilterArgs{...} }
type GetComponentsFilterArrayInput interface {
	pulumi.Input

	ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput
	ToGetComponentsFilterArrayOutputWithContext(context.Context) GetComponentsFilterArrayOutput
}

type GetComponentsFilterArray []GetComponentsFilterInput

func (GetComponentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsFilter)(nil)).Elem()
}

func (i GetComponentsFilterArray) ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput {
	return i.ToGetComponentsFilterArrayOutputWithContext(context.Background())
}

func (i GetComponentsFilterArray) ToGetComponentsFilterArrayOutputWithContext(ctx context.Context) GetComponentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsFilterArrayOutput)
}

type GetComponentsFilterOutput struct{ *pulumi.OutputState }

func (GetComponentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsFilter)(nil)).Elem()
}

func (o GetComponentsFilterOutput) ToGetComponentsFilterOutput() GetComponentsFilterOutput {
	return o
}

func (o GetComponentsFilterOutput) ToGetComponentsFilterOutputWithContext(ctx context.Context) GetComponentsFilterOutput {
	return o
}

func (o GetComponentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComponentsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComponentsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetComponentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComponentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetComponentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetComponentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsFilter)(nil)).Elem()
}

func (o GetComponentsFilterArrayOutput) ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput {
	return o
}

func (o GetComponentsFilterArrayOutput) ToGetComponentsFilterArrayOutputWithContext(ctx context.Context) GetComponentsFilterArrayOutput {
	return o
}

func (o GetComponentsFilterArrayOutput) Index(i pulumi.IntInput) GetComponentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentsFilter {
		return vs[0].([]GetComponentsFilter)[vs[1].(int)]
	}).(GetComponentsFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsComponentInput)(nil)).Elem(), GetComponentsComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsComponentArrayInput)(nil)).Elem(), GetComponentsComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsFilterInput)(nil)).Elem(), GetComponentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsFilterArrayInput)(nil)).Elem(), GetComponentsFilterArray{})
	pulumi.RegisterOutputType(GetComponentsComponentOutput{})
	pulumi.RegisterOutputType(GetComponentsComponentArrayOutput{})
	pulumi.RegisterOutputType(GetComponentsFilterOutput{})
	pulumi.RegisterOutputType(GetComponentsFilterArrayOutput{})
}
