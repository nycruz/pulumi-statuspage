// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package statuspage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetComponentGroupsComponentGroup struct {
	Components  []string `pulumi:"components"`
	Description string   `pulumi:"description"`
	// The ID of this resource.
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	Position int    `pulumi:"position"`
}

// GetComponentGroupsComponentGroupInput is an input type that accepts GetComponentGroupsComponentGroupArgs and GetComponentGroupsComponentGroupOutput values.
// You can construct a concrete instance of `GetComponentGroupsComponentGroupInput` via:
//
//          GetComponentGroupsComponentGroupArgs{...}
type GetComponentGroupsComponentGroupInput interface {
	pulumi.Input

	ToGetComponentGroupsComponentGroupOutput() GetComponentGroupsComponentGroupOutput
	ToGetComponentGroupsComponentGroupOutputWithContext(context.Context) GetComponentGroupsComponentGroupOutput
}

type GetComponentGroupsComponentGroupArgs struct {
	Components  pulumi.StringArrayInput `pulumi:"components"`
	Description pulumi.StringInput      `pulumi:"description"`
	// The ID of this resource.
	Id       pulumi.StringInput `pulumi:"id"`
	Name     pulumi.StringInput `pulumi:"name"`
	Position pulumi.IntInput    `pulumi:"position"`
}

func (GetComponentGroupsComponentGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentGroupsComponentGroup)(nil)).Elem()
}

func (i GetComponentGroupsComponentGroupArgs) ToGetComponentGroupsComponentGroupOutput() GetComponentGroupsComponentGroupOutput {
	return i.ToGetComponentGroupsComponentGroupOutputWithContext(context.Background())
}

func (i GetComponentGroupsComponentGroupArgs) ToGetComponentGroupsComponentGroupOutputWithContext(ctx context.Context) GetComponentGroupsComponentGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentGroupsComponentGroupOutput)
}

// GetComponentGroupsComponentGroupArrayInput is an input type that accepts GetComponentGroupsComponentGroupArray and GetComponentGroupsComponentGroupArrayOutput values.
// You can construct a concrete instance of `GetComponentGroupsComponentGroupArrayInput` via:
//
//          GetComponentGroupsComponentGroupArray{ GetComponentGroupsComponentGroupArgs{...} }
type GetComponentGroupsComponentGroupArrayInput interface {
	pulumi.Input

	ToGetComponentGroupsComponentGroupArrayOutput() GetComponentGroupsComponentGroupArrayOutput
	ToGetComponentGroupsComponentGroupArrayOutputWithContext(context.Context) GetComponentGroupsComponentGroupArrayOutput
}

type GetComponentGroupsComponentGroupArray []GetComponentGroupsComponentGroupInput

func (GetComponentGroupsComponentGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentGroupsComponentGroup)(nil)).Elem()
}

func (i GetComponentGroupsComponentGroupArray) ToGetComponentGroupsComponentGroupArrayOutput() GetComponentGroupsComponentGroupArrayOutput {
	return i.ToGetComponentGroupsComponentGroupArrayOutputWithContext(context.Background())
}

func (i GetComponentGroupsComponentGroupArray) ToGetComponentGroupsComponentGroupArrayOutputWithContext(ctx context.Context) GetComponentGroupsComponentGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentGroupsComponentGroupArrayOutput)
}

type GetComponentGroupsComponentGroupOutput struct{ *pulumi.OutputState }

func (GetComponentGroupsComponentGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentGroupsComponentGroup)(nil)).Elem()
}

func (o GetComponentGroupsComponentGroupOutput) ToGetComponentGroupsComponentGroupOutput() GetComponentGroupsComponentGroupOutput {
	return o
}

func (o GetComponentGroupsComponentGroupOutput) ToGetComponentGroupsComponentGroupOutputWithContext(ctx context.Context) GetComponentGroupsComponentGroupOutput {
	return o
}

func (o GetComponentGroupsComponentGroupOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComponentGroupsComponentGroup) []string { return v.Components }).(pulumi.StringArrayOutput)
}

func (o GetComponentGroupsComponentGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentGroupsComponentGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetComponentGroupsComponentGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentGroupsComponentGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComponentGroupsComponentGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentGroupsComponentGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComponentGroupsComponentGroupOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v GetComponentGroupsComponentGroup) int { return v.Position }).(pulumi.IntOutput)
}

type GetComponentGroupsComponentGroupArrayOutput struct{ *pulumi.OutputState }

func (GetComponentGroupsComponentGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentGroupsComponentGroup)(nil)).Elem()
}

func (o GetComponentGroupsComponentGroupArrayOutput) ToGetComponentGroupsComponentGroupArrayOutput() GetComponentGroupsComponentGroupArrayOutput {
	return o
}

func (o GetComponentGroupsComponentGroupArrayOutput) ToGetComponentGroupsComponentGroupArrayOutputWithContext(ctx context.Context) GetComponentGroupsComponentGroupArrayOutput {
	return o
}

func (o GetComponentGroupsComponentGroupArrayOutput) Index(i pulumi.IntInput) GetComponentGroupsComponentGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentGroupsComponentGroup {
		return vs[0].([]GetComponentGroupsComponentGroup)[vs[1].(int)]
	}).(GetComponentGroupsComponentGroupOutput)
}

type GetComponentGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetComponentGroupsFilterInput is an input type that accepts GetComponentGroupsFilterArgs and GetComponentGroupsFilterOutput values.
// You can construct a concrete instance of `GetComponentGroupsFilterInput` via:
//
//          GetComponentGroupsFilterArgs{...}
type GetComponentGroupsFilterInput interface {
	pulumi.Input

	ToGetComponentGroupsFilterOutput() GetComponentGroupsFilterOutput
	ToGetComponentGroupsFilterOutputWithContext(context.Context) GetComponentGroupsFilterOutput
}

type GetComponentGroupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetComponentGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentGroupsFilter)(nil)).Elem()
}

func (i GetComponentGroupsFilterArgs) ToGetComponentGroupsFilterOutput() GetComponentGroupsFilterOutput {
	return i.ToGetComponentGroupsFilterOutputWithContext(context.Background())
}

func (i GetComponentGroupsFilterArgs) ToGetComponentGroupsFilterOutputWithContext(ctx context.Context) GetComponentGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentGroupsFilterOutput)
}

// GetComponentGroupsFilterArrayInput is an input type that accepts GetComponentGroupsFilterArray and GetComponentGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetComponentGroupsFilterArrayInput` via:
//
//          GetComponentGroupsFilterArray{ GetComponentGroupsFilterArgs{...} }
type GetComponentGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetComponentGroupsFilterArrayOutput() GetComponentGroupsFilterArrayOutput
	ToGetComponentGroupsFilterArrayOutputWithContext(context.Context) GetComponentGroupsFilterArrayOutput
}

type GetComponentGroupsFilterArray []GetComponentGroupsFilterInput

func (GetComponentGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentGroupsFilter)(nil)).Elem()
}

func (i GetComponentGroupsFilterArray) ToGetComponentGroupsFilterArrayOutput() GetComponentGroupsFilterArrayOutput {
	return i.ToGetComponentGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetComponentGroupsFilterArray) ToGetComponentGroupsFilterArrayOutputWithContext(ctx context.Context) GetComponentGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentGroupsFilterArrayOutput)
}

type GetComponentGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetComponentGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentGroupsFilter)(nil)).Elem()
}

func (o GetComponentGroupsFilterOutput) ToGetComponentGroupsFilterOutput() GetComponentGroupsFilterOutput {
	return o
}

func (o GetComponentGroupsFilterOutput) ToGetComponentGroupsFilterOutputWithContext(ctx context.Context) GetComponentGroupsFilterOutput {
	return o
}

func (o GetComponentGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComponentGroupsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComponentGroupsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetComponentGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComponentGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetComponentGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetComponentGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentGroupsFilter)(nil)).Elem()
}

func (o GetComponentGroupsFilterArrayOutput) ToGetComponentGroupsFilterArrayOutput() GetComponentGroupsFilterArrayOutput {
	return o
}

func (o GetComponentGroupsFilterArrayOutput) ToGetComponentGroupsFilterArrayOutputWithContext(ctx context.Context) GetComponentGroupsFilterArrayOutput {
	return o
}

func (o GetComponentGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetComponentGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentGroupsFilter {
		return vs[0].([]GetComponentGroupsFilter)[vs[1].(int)]
	}).(GetComponentGroupsFilterOutput)
}

type GetComponentsComponent struct {
	AutomationEmail string `pulumi:"automationEmail"`
	Description     string `pulumi:"description"`
	GroupId         string `pulumi:"groupId"`
	// The ID of this resource.
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	Position int    `pulumi:"position"`
}

// GetComponentsComponentInput is an input type that accepts GetComponentsComponentArgs and GetComponentsComponentOutput values.
// You can construct a concrete instance of `GetComponentsComponentInput` via:
//
//          GetComponentsComponentArgs{...}
type GetComponentsComponentInput interface {
	pulumi.Input

	ToGetComponentsComponentOutput() GetComponentsComponentOutput
	ToGetComponentsComponentOutputWithContext(context.Context) GetComponentsComponentOutput
}

type GetComponentsComponentArgs struct {
	AutomationEmail pulumi.StringInput `pulumi:"automationEmail"`
	Description     pulumi.StringInput `pulumi:"description"`
	GroupId         pulumi.StringInput `pulumi:"groupId"`
	// The ID of this resource.
	Id       pulumi.StringInput `pulumi:"id"`
	Name     pulumi.StringInput `pulumi:"name"`
	Position pulumi.IntInput    `pulumi:"position"`
}

func (GetComponentsComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsComponent)(nil)).Elem()
}

func (i GetComponentsComponentArgs) ToGetComponentsComponentOutput() GetComponentsComponentOutput {
	return i.ToGetComponentsComponentOutputWithContext(context.Background())
}

func (i GetComponentsComponentArgs) ToGetComponentsComponentOutputWithContext(ctx context.Context) GetComponentsComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsComponentOutput)
}

// GetComponentsComponentArrayInput is an input type that accepts GetComponentsComponentArray and GetComponentsComponentArrayOutput values.
// You can construct a concrete instance of `GetComponentsComponentArrayInput` via:
//
//          GetComponentsComponentArray{ GetComponentsComponentArgs{...} }
type GetComponentsComponentArrayInput interface {
	pulumi.Input

	ToGetComponentsComponentArrayOutput() GetComponentsComponentArrayOutput
	ToGetComponentsComponentArrayOutputWithContext(context.Context) GetComponentsComponentArrayOutput
}

type GetComponentsComponentArray []GetComponentsComponentInput

func (GetComponentsComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsComponent)(nil)).Elem()
}

func (i GetComponentsComponentArray) ToGetComponentsComponentArrayOutput() GetComponentsComponentArrayOutput {
	return i.ToGetComponentsComponentArrayOutputWithContext(context.Background())
}

func (i GetComponentsComponentArray) ToGetComponentsComponentArrayOutputWithContext(ctx context.Context) GetComponentsComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsComponentArrayOutput)
}

type GetComponentsComponentOutput struct{ *pulumi.OutputState }

func (GetComponentsComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsComponent)(nil)).Elem()
}

func (o GetComponentsComponentOutput) ToGetComponentsComponentOutput() GetComponentsComponentOutput {
	return o
}

func (o GetComponentsComponentOutput) ToGetComponentsComponentOutputWithContext(ctx context.Context) GetComponentsComponentOutput {
	return o
}

func (o GetComponentsComponentOutput) AutomationEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.AutomationEmail }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetComponentsComponentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsComponent) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComponentsComponentOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v GetComponentsComponent) int { return v.Position }).(pulumi.IntOutput)
}

type GetComponentsComponentArrayOutput struct{ *pulumi.OutputState }

func (GetComponentsComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsComponent)(nil)).Elem()
}

func (o GetComponentsComponentArrayOutput) ToGetComponentsComponentArrayOutput() GetComponentsComponentArrayOutput {
	return o
}

func (o GetComponentsComponentArrayOutput) ToGetComponentsComponentArrayOutputWithContext(ctx context.Context) GetComponentsComponentArrayOutput {
	return o
}

func (o GetComponentsComponentArrayOutput) Index(i pulumi.IntInput) GetComponentsComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentsComponent {
		return vs[0].([]GetComponentsComponent)[vs[1].(int)]
	}).(GetComponentsComponentOutput)
}

type GetComponentsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetComponentsFilterInput is an input type that accepts GetComponentsFilterArgs and GetComponentsFilterOutput values.
// You can construct a concrete instance of `GetComponentsFilterInput` via:
//
//          GetComponentsFilterArgs{...}
type GetComponentsFilterInput interface {
	pulumi.Input

	ToGetComponentsFilterOutput() GetComponentsFilterOutput
	ToGetComponentsFilterOutputWithContext(context.Context) GetComponentsFilterOutput
}

type GetComponentsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetComponentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsFilter)(nil)).Elem()
}

func (i GetComponentsFilterArgs) ToGetComponentsFilterOutput() GetComponentsFilterOutput {
	return i.ToGetComponentsFilterOutputWithContext(context.Background())
}

func (i GetComponentsFilterArgs) ToGetComponentsFilterOutputWithContext(ctx context.Context) GetComponentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsFilterOutput)
}

// GetComponentsFilterArrayInput is an input type that accepts GetComponentsFilterArray and GetComponentsFilterArrayOutput values.
// You can construct a concrete instance of `GetComponentsFilterArrayInput` via:
//
//          GetComponentsFilterArray{ GetComponentsFilterArgs{...} }
type GetComponentsFilterArrayInput interface {
	pulumi.Input

	ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput
	ToGetComponentsFilterArrayOutputWithContext(context.Context) GetComponentsFilterArrayOutput
}

type GetComponentsFilterArray []GetComponentsFilterInput

func (GetComponentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsFilter)(nil)).Elem()
}

func (i GetComponentsFilterArray) ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput {
	return i.ToGetComponentsFilterArrayOutputWithContext(context.Background())
}

func (i GetComponentsFilterArray) ToGetComponentsFilterArrayOutputWithContext(ctx context.Context) GetComponentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsFilterArrayOutput)
}

type GetComponentsFilterOutput struct{ *pulumi.OutputState }

func (GetComponentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsFilter)(nil)).Elem()
}

func (o GetComponentsFilterOutput) ToGetComponentsFilterOutput() GetComponentsFilterOutput {
	return o
}

func (o GetComponentsFilterOutput) ToGetComponentsFilterOutputWithContext(ctx context.Context) GetComponentsFilterOutput {
	return o
}

func (o GetComponentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComponentsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComponentsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetComponentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComponentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetComponentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetComponentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsFilter)(nil)).Elem()
}

func (o GetComponentsFilterArrayOutput) ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput {
	return o
}

func (o GetComponentsFilterArrayOutput) ToGetComponentsFilterArrayOutputWithContext(ctx context.Context) GetComponentsFilterArrayOutput {
	return o
}

func (o GetComponentsFilterArrayOutput) Index(i pulumi.IntInput) GetComponentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentsFilter {
		return vs[0].([]GetComponentsFilter)[vs[1].(int)]
	}).(GetComponentsFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentGroupsComponentGroupInput)(nil)).Elem(), GetComponentGroupsComponentGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentGroupsComponentGroupArrayInput)(nil)).Elem(), GetComponentGroupsComponentGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentGroupsFilterInput)(nil)).Elem(), GetComponentGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentGroupsFilterArrayInput)(nil)).Elem(), GetComponentGroupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsComponentInput)(nil)).Elem(), GetComponentsComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsComponentArrayInput)(nil)).Elem(), GetComponentsComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsFilterInput)(nil)).Elem(), GetComponentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsFilterArrayInput)(nil)).Elem(), GetComponentsFilterArray{})
	pulumi.RegisterOutputType(GetComponentGroupsComponentGroupOutput{})
	pulumi.RegisterOutputType(GetComponentGroupsComponentGroupArrayOutput{})
	pulumi.RegisterOutputType(GetComponentGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetComponentGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetComponentsComponentOutput{})
	pulumi.RegisterOutputType(GetComponentsComponentArrayOutput{})
	pulumi.RegisterOutputType(GetComponentsFilterOutput{})
	pulumi.RegisterOutputType(GetComponentsFilterArrayOutput{})
}
