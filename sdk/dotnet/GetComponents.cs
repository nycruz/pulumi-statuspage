// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Statuspage
{
    public static class GetComponents
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Statuspage = Pulumi.Statuspage;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var @default = Output.Create(Statuspage.GetComponents.InvokeAsync(new Statuspage.GetComponentsArgs
        ///         {
        ///             PageId = local.Page_id,
        ///             Filters = 
        ///             {
        ///                 new Statuspage.Inputs.GetComponentsFilterArgs
        ///                 {
        ///                     Name = "name",
        ///                     Values = 
        ///                     {
        ///                         "value_1",
        ///                         "value_2",
        ///                     },
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetComponentsResult> InvokeAsync(GetComponentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetComponentsResult>("statuspage:index/getComponents:getComponents", args ?? new GetComponentsArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Statuspage = Pulumi.Statuspage;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var @default = Output.Create(Statuspage.GetComponents.InvokeAsync(new Statuspage.GetComponentsArgs
        ///         {
        ///             PageId = local.Page_id,
        ///             Filters = 
        ///             {
        ///                 new Statuspage.Inputs.GetComponentsFilterArgs
        ///                 {
        ///                     Name = "name",
        ///                     Values = 
        ///                     {
        ///                         "value_1",
        ///                         "value_2",
        ///                     },
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetComponentsResult> Invoke(GetComponentsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetComponentsResult>("statuspage:index/getComponents:getComponents", args ?? new GetComponentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComponentsArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetComponentsFilterArgs>? _filters;
        public List<Inputs.GetComponentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetComponentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// the ID of the page this component belongs to
        /// </summary>
        [Input("pageId", required: true)]
        public string PageId { get; set; } = null!;

        public GetComponentsArgs()
        {
        }
    }

    public sealed class GetComponentsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetComponentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetComponentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetComponentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// the ID of the page this component belongs to
        /// </summary>
        [Input("pageId", required: true)]
        public Input<string> PageId { get; set; } = null!;

        public GetComponentsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetComponentsResult
    {
        public readonly ImmutableArray<Outputs.GetComponentsComponentResult> Components;
        public readonly ImmutableArray<Outputs.GetComponentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// the ID of the page this component belongs to
        /// </summary>
        public readonly string PageId;

        [OutputConstructor]
        private GetComponentsResult(
            ImmutableArray<Outputs.GetComponentsComponentResult> components,

            ImmutableArray<Outputs.GetComponentsFilterResult> filters,

            string id,

            string pageId)
        {
            Components = components;
            Filters = filters;
            Id = id;
            PageId = pageId;
        }
    }
}
