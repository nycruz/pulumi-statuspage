{
    "name": "statuspage",
    "description": "A Pulumi package for creating and managing statuspage cloud resources.",
    "keywords": [
        "pulumi",
        "statuspage",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`statuspage` Terraform Provider](https://github.com/sbecker59/terraform-provider-statuspage).",
    "repository": "https://github.com/nycruz/pulumi-statuspage",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string"
            }
        }
    },
    "types": {
        "statuspage:index/getComponentsComponent:getComponentsComponent": {
            "properties": {
                "automationEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "position": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "automationEmail",
                "description",
                "groupId",
                "id",
                "name",
                "position"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "statuspage:index/getComponentsFilter:getComponentsFilter": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the statuspage package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string"
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string"
            }
        }
    },
    "resources": {
        "statuspage:index/component:Component": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as statuspage from \"@pulumi/statuspage\";\n\nconst myComponent = new statuspage.Component(\"myComponent\", {\n    pageId: \"my_page_id\",\n    description: \"Status of my Website\",\n    status: \"operational\",\n});\n```\n```python\nimport pulumi\nimport pulumi_statuspage as statuspage\n\nmy_component = statuspage.Component(\"myComponent\",\n    page_id=\"my_page_id\",\n    description=\"Status of my Website\",\n    status=\"operational\")\n```\n```csharp\nusing Pulumi;\nusing Statuspage = Pulumi.Statuspage;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myComponent = new Statuspage.Component(\"myComponent\", new Statuspage.ComponentArgs\n        {\n            PageId = \"my_page_id\",\n            Description = \"Status of my Website\",\n            Status = \"operational\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nycruz/pulumi-statuspage/sdk/go/statuspage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := statuspage.NewComponent(ctx, \"myComponent\", \u0026statuspage.ComponentArgs{\n\t\t\tPageId:      pulumi.String(\"my_page_id\"),\n\t\t\tDescription: pulumi.String(\"Status of my Website\"),\n\t\t\tStatus:      pulumi.String(\"operational\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "automationEmail": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "More detailed description for the component\n"
                },
                "name": {
                    "type": "string",
                    "description": "Display Name for the component\n"
                },
                "onlyShowIfDegraded": {
                    "type": "boolean"
                },
                "pageId": {
                    "type": "string",
                    "description": "the ID of the page this component belongs to\n"
                },
                "showcase": {
                    "type": "boolean",
                    "description": "Should this component be shown component only if in degraded state\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Should this component be showcased\n"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "automationEmail",
                "name",
                "pageId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "More detailed description for the component\n"
                },
                "name": {
                    "type": "string",
                    "description": "Display Name for the component\n"
                },
                "onlyShowIfDegraded": {
                    "type": "boolean"
                },
                "pageId": {
                    "type": "string",
                    "description": "the ID of the page this component belongs to\n"
                },
                "showcase": {
                    "type": "boolean",
                    "description": "Should this component be shown component only if in degraded state\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Should this component be showcased\n"
                },
                "status": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "pageId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Component resources.\n",
                "properties": {
                    "automationEmail": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "More detailed description for the component\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display Name for the component\n"
                    },
                    "onlyShowIfDegraded": {
                        "type": "boolean"
                    },
                    "pageId": {
                        "type": "string",
                        "description": "the ID of the page this component belongs to\n"
                    },
                    "showcase": {
                        "type": "boolean",
                        "description": "Should this component be shown component only if in degraded state\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Should this component be showcased\n"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "statuspage:index/getComponents:getComponents": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as statuspage from \"@pulumi/statuspage\";\n\nconst default = statuspage.getComponents({\n    pageId: local.page_id,\n    filters: [{\n        name: \"name\",\n        values: [\n            \"value_1\",\n            \"value_2\",\n        ],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_statuspage as statuspage\n\ndefault = statuspage.get_components(page_id=local[\"page_id\"],\n    filters=[statuspage.GetComponentsFilterArgs(\n        name=\"name\",\n        values=[\n            \"value_1\",\n            \"value_2\",\n        ],\n    )])\n```\n```csharp\nusing Pulumi;\nusing Statuspage = Pulumi.Statuspage;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var @default = Output.Create(Statuspage.GetComponents.InvokeAsync(new Statuspage.GetComponentsArgs\n        {\n            PageId = local.Page_id,\n            Filters = \n            {\n                new Statuspage.Inputs.GetComponentsFilterArgs\n                {\n                    Name = \"name\",\n                    Values = \n                    {\n                        \"value_1\",\n                        \"value_2\",\n                    },\n                },\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nycruz/pulumi-statuspage/sdk/go/statuspage\"\n\t\"github.com/pulumi/pulumi-statuspage/sdk/go/statuspage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := statuspage.GetComponents(ctx, \u0026GetComponentsArgs{\n\t\t\tPageId: local.Page_id,\n\t\t\tFilters: []GetComponentsFilter{\n\t\t\t\tGetComponentsFilter{\n\t\t\t\t\tName: \"name\",\n\t\t\t\t\tValues: []string{\n\t\t\t\t\t\t\"value_1\",\n\t\t\t\t\t\t\"value_2\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getComponents.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/statuspage:index/getComponentsFilter:getComponentsFilter"
                        }
                    },
                    "pageId": {
                        "type": "string",
                        "description": "the ID of the page this component belongs to\n"
                    }
                },
                "type": "object",
                "required": [
                    "pageId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComponents.\n",
                "properties": {
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/statuspage:index/getComponentsComponent:getComponentsComponent"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/statuspage:index/getComponentsFilter:getComponentsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "pageId": {
                        "type": "string",
                        "description": "the ID of the page this component belongs to\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "pageId",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/nycruz/pulumi-statuspage/sdk/go/statuspage"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing statuspage cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/sbecker59/terraform-provider-statuspage)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-statuspage` repo](https://github.com/pulumi/pulumi-statuspage/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`sbecker59/terraform-provider-statuspage` repo](https://github.com/sbecker59/terraform-provider-statuspage/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/sbecker59/terraform-provider-statuspage)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-statuspage` repo](https://github.com/pulumi/pulumi-statuspage/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`sbecker59/terraform-provider-statuspage` repo](https://github.com/sbecker59/terraform-provider-statuspage/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}